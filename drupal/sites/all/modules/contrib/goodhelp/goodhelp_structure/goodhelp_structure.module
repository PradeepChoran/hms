<?php
/**
 * @file
 * Main code for Good Help Structure module.
 */
include_once('goodhelp_structure.features.inc');

/**
 * Implements hook_field_form_FORM_ID_alter().
 */
function goodhelp_structure_form_goodhelp_topic_node_form_alter(&$form, &$form_state) {
  // Make some changes to the book fieldset.
  $book = &$form['book'];
  // Take the book fieldset out of the 'additional settings' vertical tabs group.
  unset($book['#group']);
  // Change some other settings.
  $book['#weight'] = -50;
  $book['#collapsible'] = FALSE;
  $book['#collapsed'] = FALSE;
  // Remove weight just to simplify things. Can be changed via book UI.
  $book['weight']['#access'] = FALSE; 
  
  $form['title']['#description'] = t('Enter a human readable title for this page, which will appear at the top of the help page.');
  // If the parent is preset, we are creating a child page. Simplify things.
  if ($parent = $_GET['parent']) {
    $book['#collapsible'] = TRUE;
    $book['#disabled'] = TRUE;
    // Preset the product and version info.
    $bid = goodhelp_structure_get_bid($parent);
    if ($bid) {
      $info = goodhelp_structure_get_book_info($bid);
      $product = $info['product'];
      $version = $info['version'];
      $form['field_goodhelp_topic_product']['und']['#default_value'] = $product;
      $form['field_goodhelp_topic_product']['und']['#disabled'] = TRUE;
      $form['field_goodhelp_topic_version']['und']['#options'] = drupal_map_assoc(array($version));
      $form['field_goodhelp_topic_version']['und']['#default_value'] = $version;
    }
  } 
  // Add a validation function.
  $form['#validate'][] = 'goodhelp_structure_validate_structure';
}

/**
 * Validate callback for help topics.
 */
function goodhelp_structure_validate_structure($form, &$form_state) {
  // Make sure that the selected version is also the selected book's version.
  $bid = $form_state['values']['book']['bid'];
  if (is_numeric($bid) && $bid != 0) {
    $book_info = goodhelp_structure_get_book_info($bid);
    $product = $form_state['values']['field_goodhelp_topic_product']['und'][0]['value'];
    $version = $form_state['values']['field_goodhelp_topic_version']['und'][0]['value'];
    if ($product != $book_info['product'] || $version != $book_info['version']) {
      form_set_error('field_goodhelp_topic_product', t('You must select a product and version that match the product and version for the book you selected.'));
    }
  }
}

/**
 * Returns product and version information for the given book.
 */
function goodhelp_structure_get_book_info($bid) {
  $node = node_load($bid);
  $product_field_items = field_get_items('node', $node, 'field_goodhelp_topic_product');
  $product = $product_field_items[0]['value'];
  $version_field_items = field_get_items('node', $node, 'field_goodhelp_topic_version');
  $version = $version_field_items[0]['value'];
  $info = array(
    'product' => $product,
    'version' => $version,
  );
  return $info;
}

/**
 * Returns the book id (nid of the top level page) for the given menu link id.
 *
 * @param $mlid
 *  A menu link id that corresponds to a book page.
 * 
 * @return the bid of the book that the given $mlid is in, or FALSE;
 */
function goodhelp_structure_get_bid($mlid) {
  $query = db_select('book');
  $query->addField('book', 'bid');
  $query->condition('book.mlid', $mlid, '=');
  if ($bid = $query->execute()->fetchField()) {
    return $bid;
  }
  return FALSE;
}